apply plugin: 'com.android.application'
apply plugin: 'checkstyle'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "com.simple.gradleplugin"
        minSdkVersion 11
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

//        android test测试的runner
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        disable 'TypographyFractions', 'TypographyQuotes'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.0.1'

    // 依赖 robolectric
    testCompile('org.robolectric:robolectric:3.1.1'){
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    // Optional -- Mockito framework
    testCompile 'org.mockito:mockito-core:1.10.19'

//    Android Test 配置
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    androidTestCompile 'com.android.support.test:runner:0.5'
}

// 添加 插件依赖
buildscript {
    repositories {
        maven {
            url uri('../repo')
        }
    }
    dependencies {
        // 自定义插件, 类库的名字以及版本
        classpath 'com.simple.plugin:translateplugin:1.0.0'
    }
}

// 编译任务依赖aCheckstyle就可以先检测再
task checkstyle(type: Checkstyle) {
//    println("xml输出 : " + reports.xml.destination)
    configFile file("../config/checkstyle/checkstyle.xml")
    source 'src/main'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files()

    reports {
        // 注意: 如果清空build目录之后再运行可能会导致失败,此时注释掉下面两行再重新运行,等build/reports/checkstyle 目录下
        // 生成了xml之后再放开注释即可.
        ant.xslt(in: reports.xml.destination,
                style: new File('../config/xsl/checkstyle-noframes-sorted.xsl'),
                out: new File(reports.xml.destination.parent, 'checkstyle-report.html'))
    }
}


// 使用我的自定义插件
//gradle-plugin下的文件名
apply plugin: 'com.simple.translate.plugin'

// 应用插件之后设置自定义插件的参数
buildParams {
    applicationId = "my.custom.app"
    minSDK = 14
    compileParams {
        signConfig = "my.keystore"
        minifyEnabled = true
    }
}


